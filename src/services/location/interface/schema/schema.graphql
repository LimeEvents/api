scalar Url

type Query {
  node(id: ID!): Node
  location(id: ID!): Location
  locations(first: Int, last: Int, before: String, after: String): LocationConnection!
}

type Address {
  address1: String!
  address2: String
  address3: String
  locality: String!
  postalCode: String!
  region: String!
  country: String!
  timezone: String
  latitude: Float
  longitude: Float
}

type LocationConnection {
  pageInfo: PageInfo!
  edges: [ LocationEdge! ]!
}

type LocationEdge {
  cursor: String!
  node: Location!
}

type Location implements Node {
  id: ID!
  name: String!
  slug: String!
  caption: String
  description: String
  images: [ Url ]!
  address: Address!
  capacity: Int!
}

type PageInfo {
  startCursor: String
  endCursor: String
  hasNextPage: Boolean
  hasPreviousPage: Boolean
}

interface Node {
  id: ID!
}
